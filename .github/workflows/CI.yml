# ==============================================================
# CI with GitHub Actions
# ==============================================================

name: GalaxyChop CI

on:
  - push
  - pull_request

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:

      # continues even if an environment fails
      fail-fast: false

      matrix:

        # all the tox with the default python version
        py_version: [3.9]
        tox_env:
          - style
          - docstyle
          - check-manifest
          - check-headers
          - coverage
          - make-docs

        # check version by version
        include:
          - py_version: 3.7
            tox_env: py37
          - py_version: 3.8
            tox_env: py38
          - py_version: 3.9
            tox_env: py39

    # the steps of the CI
    steps:
      - uses: actions/checkout@master

      # optionals
      - name: Install pandoc
        if: ${{ matrix.tox_env == 'make-docs'}}
        run: sudo apt-get install pandoc
      # tox steps
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py_version }}
      - name: Install tox
        run: pip install tox
      - name: tox -e ${{ matrix.tox_env }}
        run: tox -re ${{ matrix.tox_env }}


  build:
       needs: test
       runs-on: ${{ matrix.os }}
       strategy:
         matrix:
           os: [ubuntu-latest, windows-latest]
           python-version: ['3.7', '3.8', '3.9']
       steps:
       - uses: actions/checkout@v2
       - name: Set up Python
         uses: actions/setup-python@v2
         with:
           python-version: ${{ matrix.python-version }}
       - name: Install dependencies
         run: |
           python -m pip install --upgrade pip
           pip install setuptools wheel numpy
       - uses: knicknic/os-specific-run@v1
         with:
           linux: python setup.py sdist
           windows: python setup.py bdist_wheel build_ext --fcompiler=gnu95 --compiler=mingw32
       - uses: actions/upload-artifact@v2
         with:
           name: dist
           path: dist

  # build many-linux wheel
  build-manylinux:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: RalfG/python-wheels-manylinux-build@v0.3.4-manylinux2010_x86_64
      with:
        python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39'
        build-requirements: 'numpy'
        pip-wheel-args: '-w ./dist --no-deps'
    - name: Remove non-compatible packages
      run: |
        sudo rm dist/*linux_x86_64.whl
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist
