# ==============================================================
# CI with GitHub Actions
# ==============================================================

name: PyPI publish

on:
  release:
    types: [created]

jobs:
  testing:
    uses: "BrunoCeliz/galaxy-chop/.github/workflows/tests.yml@3c38813a2c2cc9d2d1b78f0538b1deedfeef9b44"

  build:
    needs: testing
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: [ "3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel numpy
      - uses: knicknic/os-specific-run@v1
        with:
          linux: python setup.py bdist_wheel build_ext
          windows: python setup.py bdist_wheel build_ext --fcompiler=gnu95 --compiler=mingw32
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  # build many-linux wheel
  build-manylinux:
    needs: testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: RalfG/python-wheels-manylinux-build@v0.3.4-manylinux2010_x86_64
        with:
          python-versions: "cp37-cp37m cp38-cp38 cp39-cp39 "
          build-requirements: "numpy"
          pip-wheel-args: "-w ./dist --no-deps"
      - name: Remove non-compatible packages
        run: |
          sudo rm dist/*linux_x86_64.whl
      - uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  twine-upload:
    needs: [build, build-manylinux]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install twine
      - name: Publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: twine upload dist/*
